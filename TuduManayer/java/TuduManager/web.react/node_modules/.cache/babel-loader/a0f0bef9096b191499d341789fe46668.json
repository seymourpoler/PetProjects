{"ast":null,"code":"var _jsxFileName = \"/home/lgabriel/tmp/multi-pom/multi-pom.web/src/users/UserView.js\";\nimport React from 'react';\nimport { Spinner } from '../Spinner';\nimport { createUserPresenter } from './UserPresenter';\nexport class UserView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.presenter = createUserPresenter(this);\n\n    this.componentDidMount = async () => {\n      const users = await this.presenter.find();\n      this.setState({\n        users\n      });\n    };\n\n    this.showInternalServerError = () => {\n      this.setState({\n        errorMessage: 'Internal Server Error'\n      });\n    };\n\n    this.cleanErrors = () => {\n      this.setState({\n        errorMessage: ''\n      });\n    };\n\n    this.show = users => {\n      this.setState({\n        users\n      });\n    };\n\n    this.showSpinner = () => {\n      this.setState({\n        showSpinner: true\n      });\n    };\n\n    this.hideSpinner = () => {\n      this.setState({\n        showSpinner: false\n      });\n    };\n\n    this.state = {\n      showSpinner: false,\n      users: [],\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Users\", /*#__PURE__*/React.createElement(Spinner, {\n      show: this.state.showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, this.state.users), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage));\n  }\n\n}\nexport function createUserView() {\n  return new UserView();\n}","map":{"version":3,"sources":["/home/lgabriel/tmp/multi-pom/multi-pom.web/src/users/UserView.js"],"names":["React","Spinner","createUserPresenter","UserView","Component","constructor","props","presenter","componentDidMount","users","find","setState","showInternalServerError","errorMessage","cleanErrors","show","showSpinner","hideSpinner","state","render","createUserView"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AAEA,OAAO,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SASlBC,SATkB,GASNL,mBAAmB,CAAC,IAAD,CATb;;AAAA,SAalBM,iBAbkB,GAaE,YAAY;AAC5B,YAAMC,KAAK,GAAG,MAAM,KAAKF,SAAL,CAAeG,IAAf,EAApB;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KAhBiB;;AAAA,SAkBlBG,uBAlBkB,GAkBQ,MAAM;AAC5B,WAAKD,QAAL,CAAc;AAACE,QAAAA,YAAY,EAAG;AAAhB,OAAd;AACH,KApBiB;;AAAA,SAsBlBC,WAtBkB,GAsBJ,MAAM;AAChB,WAAKH,QAAL,CAAc;AAACE,QAAAA,YAAY,EAAG;AAAhB,OAAd;AACH,KAxBiB;;AAAA,SA0BlBE,IA1BkB,GA0BVN,KAAD,IAAW;AACd,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KA5BiB;;AAAA,SA8BlBO,WA9BkB,GA8BJ,MAAM;AAChB,WAAKL,QAAL,CAAc;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAhCiB;;AAAA,SAkClBC,WAlCkB,GAkCJ,MAAM;AAChB,WAAKN,QAAL,CAAc;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KApCiB;;AAEd,SAAKE,KAAL,GAAa;AACTF,MAAAA,WAAW,EAAE,KADJ;AAETP,MAAAA,KAAK,EAAE,EAFE;AAGTI,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AA8BDM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACI,oBAAC,OAAD;AAAU,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWF,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKE,KAAL,CAAWT,KAAnB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKS,KAAL,CAAWL,YAAf,CAHJ,CADJ;AAMH;;AA7C0C;AAgD/C,OAAO,SAASO,cAAT,GAAyB;AAC5B,SAAO,IAAIjB,QAAJ,EAAP;AACH","sourcesContent":["import React from 'react';\nimport { Spinner } from '../Spinner';\nimport { createUserPresenter } from './UserPresenter';\n\nexport class UserView extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state = {\n            showSpinner: false,\n            users: [],\n            errorMessage: ''\n        }\n    }\n\n    presenter = createUserPresenter(this);\n\n    \n\n    componentDidMount = async () => {\n        const users = await this.presenter.find();\n        this.setState({ users });\n    }\n\n    showInternalServerError = () => {\n        this.setState({errorMessage : 'Internal Server Error'});\n    }\n\n    cleanErrors = () => {\n        this.setState({errorMessage : ''});\n    }\n\n    show = (users) => {\n        this.setState({ users });\n    }\n\n    showSpinner = () => {\n        this.setState({ showSpinner: true });\n    }\n\n    hideSpinner = () => {\n        this.setState({ showSpinner: false });\n    }\n    render(){\n        return (\n            <div>Users\n                <Spinner  show={this.state.showSpinner}/>\n                <label>{this.state.users}</label>\n                <p>{this.state.errorMessage}</p>\n            </div>);\n    }\n}\n\nexport function createUserView(){\n    return new UserView();\n}"]},"metadata":{},"sourceType":"module"}
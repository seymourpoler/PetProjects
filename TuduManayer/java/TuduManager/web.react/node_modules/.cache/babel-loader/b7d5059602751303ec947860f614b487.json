{"ast":null,"code":"// export class UserService{\n//     async find(){\n//         const url = '/api/v0/users';\n//         const response = await fetch(url);\n//         if(response.status === 500){\n//             return {statusCode: response.status};\n//         }\n//         const users = await response.json();\n//         return {\n//             statusCode: response.status,\n//             users\n//         }\n//     }\n// }\nexport function UserService() {\n  let self = this;\n\n  self.find = async function () {\n    const url = '/api/v0/users';\n    const response = await fetch(url);\n\n    if (response.status === 500) {\n      return {\n        statusCode: response.status\n      };\n    }\n\n    const users = await response.json();\n    return {\n      statusCode: response.status,\n      users\n    };\n  };\n}\nexport function createUserService() {\n  return new UserService();\n}","map":{"version":3,"sources":["/home/lgabriel/tmp/multi-pom/multi-pom.web/src/users/UserService.js"],"names":["UserService","self","find","url","response","fetch","status","statusCode","users","json","createUserService"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,WAAT,GAAsB;AACzB,MAAIC,IAAI,GAAG,IAAX;;AAEAA,EAAAA,IAAI,CAACC,IAAL,GAAY,kBAAiB;AAC7B,UAAMC,GAAG,GAAG,eAAZ;AACS,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AACA,QAAGC,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAACC,QAAAA,UAAU,EAAEH,QAAQ,CAACE;AAAtB,OAAP;AACH;;AACD,UAAME,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAApB;AACA,WAAO;AACHF,MAAAA,UAAU,EAAEH,QAAQ,CAACE,MADlB;AAEHE,MAAAA;AAFG,KAAP;AAIR,GAXD;AAYH;AAED,OAAO,SAASE,iBAAT,GAA4B;AAC/B,SAAO,IAAIV,WAAJ,EAAP;AACH","sourcesContent":["// export class UserService{\n\n//     async find(){\n//         const url = '/api/v0/users';\n//         const response = await fetch(url);\n//         if(response.status === 500){\n//             return {statusCode: response.status};\n//         }\n//         const users = await response.json();\n//         return {\n//             statusCode: response.status,\n//             users\n//         }\n//     }\n// }\n\nexport function UserService(){\n    let self = this;\n\n    self.find = async function (){\n    const url = '/api/v0/users';\n             const response = await fetch(url);\n             if(response.status === 500){\n                 return {statusCode: response.status};\n             }\n             const users = await response.json();\n             return {\n                 statusCode: response.status,\n                 users\n             }\n    }\n}\n\nexport function createUserService(){\n    return new UserService();\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/usr/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/search/SearchTodoView.js\";\nimport React from 'react';\nimport { Spinner } from '../../Spinner';\nimport { createSearchTodoPresenter } from './SearchTodoPresenter';\nexport class SearchTodoView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.presenter = createSearchTodoView(this);\n\n    this.onSearchTextChange = event => {\n      this.setState({\n        searchText: event.target.value\n      });\n    };\n\n    this.search = () => {\n      this.presenter.search(this.state.searchText);\n    };\n\n    this.state = {\n      showSpinner: false,\n      searchText: '',\n      todos: [],\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      show: this.state.showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.updateInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      onclick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 75\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, this.state.errorMessage));\n  }\n\n}\nexport function createSearchTodoView() {\n  return new SearchTodoView();\n}","map":{"version":3,"sources":["/usr/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/search/SearchTodoView.js"],"names":["React","Spinner","createSearchTodoPresenter","SearchTodoView","Component","constructor","props","presenter","createSearchTodoView","onSearchTextChange","event","setState","searchText","target","value","search","state","showSpinner","todos","errorMessage","render","updateInputValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,yBAAT,QAA0C,uBAA1C;AAEA,OAAO,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA8C;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAWlBC,SAXkB,GAWNC,oBAAoB,CAAC,IAAD,CAXd;;AAAA,SAsBlBC,kBAtBkB,GAsBIC,KAAD,IAAU;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACH,KAxBiB;;AAAA,SA0BlBC,MA1BkB,GA0BT,MAAM;AACX,WAAKR,SAAL,CAAeQ,MAAf,CAAsB,KAAKC,KAAL,CAAWJ,UAAjC;AACH,KA5BiB;;AAGd,SAAKI,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETL,MAAAA,UAAU,EAAE,EAFH;AAGTM,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AAIDC,EAAAA,MAAM,GAAE;AACJ,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKI,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,oBAE0D;AAAG,MAAA,OAAO,EAAE,KAAKN,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF1D,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKC,KAAL,CAAWG,YAAf,CAHJ,CADR;AAMH;;AAtBgD;AAiCrD,OAAO,SAASX,oBAAT,GAA+B;AAClC,SAAO,IAAIL,cAAJ,EAAP;AACH","sourcesContent":["import React from 'react';\nimport { Spinner } from '../../Spinner';\nimport { createSearchTodoPresenter } from './SearchTodoPresenter';\n\nexport class SearchTodoView extends React.Component  {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            showSpinner: false,\n            searchText: '',\n            todos: [],\n            errorMessage: ''\n        }\n    }\n\n    presenter = createSearchTodoView(this);\n\n    render(){\n        return (\n                <div>\n                    <Spinner show={this.state.showSpinner}/>\n                    <input type='text' onChange={this.updateInputValue}/> <a onclick={this.search}>Search</a>\n                    <p>{this.state.errorMessage}</p>\n                </div>);\n    }\n\n    onSearchTextChange = (event) =>{\n        this.setState({ searchText: event.target.value });\n    }\n\n    search = () => {\n        this.presenter.search(this.state.searchText);\n    }\n}\n\nexport function createSearchTodoView(){\n    return new SearchTodoView();\n}"]},"metadata":{},"sourceType":"module"}
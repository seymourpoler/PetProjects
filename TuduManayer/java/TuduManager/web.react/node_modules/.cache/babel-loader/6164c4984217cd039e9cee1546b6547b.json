{"ast":null,"code":"import { createSearchTodoService } from './SearchTodoService';\nexport function SearchTodoPresenter(view, searchService) {\n  let self = this;\n\n  self.search = async textSearch => {\n    const result = await searchService.search(textSearch);\n\n    if (result.statusCode == 500) {\n      view.showInternalServerError();\n      return;\n    }\n\n    if (result.statusCode === 400) {\n      return view.showErrors(result.errors);\n    }\n\n    const todos = result.todos;\n    view.showTodos(todos);\n  };\n}\nexport function createSearchTodoPresenter(view) {\n  const service = createSearchTodoService();\n  return new SearchTodoPresenter(view, service);\n}","map":{"version":3,"sources":["/usr/code/GitHub/PetProjects/TuduManayer/java/TuduManager/web.react/src/todo/search/SearchTodoPresenter.js"],"names":["createSearchTodoService","SearchTodoPresenter","view","searchService","self","search","textSearch","result","statusCode","showInternalServerError","showErrors","errors","todos","showTodos","createSearchTodoPresenter","service"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,qBAAxC;AAEA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,aAAnC,EAAiD;AACpD,MAAIC,IAAI,GAAG,IAAX;;AAEAA,EAAAA,IAAI,CAACC,MAAL,GAAc,MAAOC,UAAP,IAAsB;AAChC,UAAMC,MAAM,GAAG,MAAMJ,aAAa,CAACE,MAAd,CAAqBC,UAArB,CAArB;;AACA,QAAGC,MAAM,CAACC,UAAP,IAAqB,GAAxB,EAA4B;AACxBN,MAAAA,IAAI,CAACO,uBAAL;AACA;AACH;;AACD,QAAGF,MAAM,CAACC,UAAP,KAAsB,GAAzB,EAA6B;AACzB,aAAON,IAAI,CAACQ,UAAL,CAAgBH,MAAM,CAACI,MAAvB,CAAP;AACH;;AACD,UAAMC,KAAK,GAAGL,MAAM,CAACK,KAArB;AACAV,IAAAA,IAAI,CAACW,SAAL,CAAeD,KAAf;AACH,GAXD;AAYH;AAED,OAAO,SAASE,yBAAT,CAAmCZ,IAAnC,EAAwC;AAC3C,QAAMa,OAAO,GAAGf,uBAAuB,EAAvC;AACA,SAAO,IAAIC,mBAAJ,CAAwBC,IAAxB,EAA8Ba,OAA9B,CAAP;AACH","sourcesContent":["import { createSearchTodoService } from './SearchTodoService';\n\nexport function SearchTodoPresenter(view, searchService){\n    let self = this;\n\n    self.search = async (textSearch) => {\n        const result = await searchService.search(textSearch);\n        if(result.statusCode == 500){\n            view.showInternalServerError();\n            return;\n        }\n        if(result.statusCode === 400){\n            return view.showErrors(result.errors);\n        }\n        const todos = result.todos;\n        view.showTodos(todos);\n    }\n}\n\nexport function createSearchTodoPresenter(view){\n    const service = createSearchTodoService();\n    return new SearchTodoPresenter(view, service);\n}"]},"metadata":{},"sourceType":"module"}
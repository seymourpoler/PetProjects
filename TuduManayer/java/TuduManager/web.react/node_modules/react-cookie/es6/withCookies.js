var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import { Consumer } from './CookiesContext';
// Only way to make function modules work with both TypeScript and Rollup
var hoistStatics = require('hoist-non-react-statics');
export default function withCookies(WrapperComponent) {
    // @ts-ignore
    var name = WrapperComponent.displayName || WrapperComponent.name;
    var CookieWrapper = /** @class */ (function (_super) {
        __extends(CookieWrapper, _super);
        function CookieWrapper() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.onChange = function () {
                // Make sure to update children with new values
                _this.forceUpdate();
            };
            return _this;
        }
        CookieWrapper.prototype.listen = function (cookies) {
            if (cookies !== this.cookies) {
                this.unlisten();
                this.cookies = cookies;
                this.cookies.addChangeListener(this.onChange);
            }
        };
        CookieWrapper.prototype.unlisten = function () {
            if (this.cookies) {
                this.cookies.removeChangeListener(this.onChange);
            }
        };
        CookieWrapper.prototype.componentWillUnmount = function () {
            this.unlisten();
        };
        CookieWrapper.prototype.render = function () {
            var _this = this;
            return (React.createElement(Consumer, null, function (cookies) {
                _this.listen(cookies);
                var _a = _this.props, forwardedRef = _a.forwardedRef, restProps = __rest(_a, ["forwardedRef"]);
                var allCookies = cookies.getAll();
                return (React.createElement(WrapperComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));
            }));
        };
        CookieWrapper.displayName = "withCookies(" + name + ")";
        CookieWrapper.WrapperComponent = WrapperComponent;
        return CookieWrapper;
    }(React.Component));
    var CookieWrapperWithRef = React.forwardRef(function (props, ref) {
        return React.createElement(CookieWrapper, __assign({}, props, { forwardedRef: ref }));
    });
    return hoistStatics(CookieWrapperWithRef, WrapperComponent, { WrappedComponent: true });
}
